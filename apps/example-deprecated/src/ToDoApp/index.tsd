import {View} from "@dlightjs/dlight"
import {TaskCard} from "./TaskCard.tsd"
import {TaskAdder} from "./TaskAdder.tsd"
import {Task} from "./Task";


function _(func: () => any, _: any) {
  return func()
}

export class ToDoApp extends View {
  @State tasks: Task[] = []
  unfinishedNum = this.tasks.filter(t=>!t.finished).length

  watchUnfinishedNum = function() {
    console.log(`remain ${this.unfinishedNum} tasks to do`)
  }.call(this)

  Body() {
    h1("ToDo App in DLight.js")
    h2("What needs to be done?")

    TaskAdder({tasks: this.tasks})

    h2(this.unfinishedNum === 0 ? "You've finished all tasks！" : `Remaining ${this.unfinishedNum} tasks to do.`)
 
    For(let task of this.tasks)[task] {
      TaskCard({task})
        .deleteTask(() => {
          this.tasks = this.tasks.filter(t=>t !== task)
        })
        .toggleBox((checked) => {
          task.finished = checked
          this.tasks = [...this.tasks]
        })
    }
  }
}

