import {View, Derived, Prop, Effect, Prop, PropDerived, State, Environment} from "@dlightjs/dlight";

class SubElement2 extends View {
    @Environment count

    Body() {
        div(`第二个 ${this.count}`)
        button("-")
            .onclick(() => {
                this.count --
            })
    }

}

class SubElement extends View {
    @Environment count

    Body() {
        div(`第1个 ${this.count}`)
        button("-")
            .onclick(() => {
                this.count --
            })
        SubElement2()
    }
}


export class EnvTest extends View {
    @State count = 2
    @State apple = [0,1]

    Body() {
        button("count")
            .onclick(() => {
                this.count += 1
            })
        button("append")
            .onclick(() => {
                this.apple = [...this.apple, this.apple.length]
            })
        button("shift")
            .onclick(() => {
                this.apple = this.apple.slice(0, this.apple.length-1)
            })
        `${this.count}`
        Environment({count: this.count}) {
            Environment({count: this.count + 20}) {
                For (let _ of this.apple) {
                    SubElement()
                    "ok"
                }
            }
        }
            
    }
}