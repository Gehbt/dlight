import { View } from "@dlightjs/dlight"
import {
  type Typed,
  type Pretty,
  div,
  button,
  Content,
  Watch,
  ForwardProps,
  Children,
} from "@dlightjs/types"
import { Routes } from "./Router"
import Ok from "./OK.view"
@View
class NN {
  @Children jj

  flag = true
  View() {
    if (this.flag) {
      this.jj
    }
  }
}

@View
class SSS {
  @Prop count

  dd = this.count * 2
  View() {
    this.dd
  }
}

@View
class JJJ {
  @Env hh

  View() {
    NNNN()
  }
}

@View
class NNNN {
  @Env flag

  View() {
    if (this.flag) {
      ;("div")
    }
  }
}

@View
class App {
  a = 1
  navigator

  View() {
    env().flag("shit")
    {
      Routes({
        hello: View => Ok().jjj("hh"),
        // world: View => Ok().jjj("nn"),
        world: () => import("./OK.view"),
      }).getNavigator(navigator => {
        this.navigator = navigator
      })
    }
    button("to hello").onClick(() => {
      this.navigator.to("/hello")
    })
    button("to world").onClick(() => {
      this.navigator.to("/world")
    })
    // if (this.a === 1) {
    //   this.a
    //   Ok()
    // } else {
    //   this.a
    //   Ok()
    //   div("okk")
    // }

    // button("+").onClick(() => this.a++)
    // button("-").onClick(() => this.a--)
  }
}

export default App as Pretty as Typed
